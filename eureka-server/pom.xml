<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.cloud</groupId>
    <artifactId>spring-cloud</artifactId>
    <version>0.0.1</version>
  </parent>
  <artifactId>eureka-server</artifactId>
  <name>eureka-server</name>
  <description>服务注册中心-Eureka Server</description>
  
  <properties>
      <java.version>1.8</java.version>
      <maven.compiler.source>1.8</maven.compiler.source>    
	  <maven.compiler.target>1.8</maven.compiler.target>    
  </properties>
  
  <dependencies>
  	<!-- spring boot -->
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-web</artifactId>
	</dependency>
    <!-- <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency> -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>
    
    <!--eureka server -->
    <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-eureka-server</artifactId>
    </dependency>
    
  </dependencies>
  
  <build>
  	<finalName>eureka-server</finalName>
  	<plugins>
  		<plugin>
  			<groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>1.5.2.RELEASE</version>
            <configuration>
                <mainClass>com.cloud.server.EurekaServerApplication</mainClass>
            </configuration>
            <executions>
                <execution>
                    <goals>
                        <goal>repackage</goal>
                    </goals>
                </execution>
            </executions>
  		</plugin>
  		
  		<!-- tag::plugin[] -->
        <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId><!-- 用maven插件方式构建docker镜像 -->
            <version>0.4.3</version>
            <configuration>
                <imageName>${docker.image.prefix}/${project.artifactId}</imageName><!-- 镜像名字 -->
                <dockerDirectory>src/main/docker</dockerDirectory><!-- 指定Dockerfile的位置 -->
                <resources><!-- 指那些需要和Dockerfile放在一起，在构建镜像时使用的文件，一般应用jar包需要纳入 -->
                    <resource>
                        <targetPath>/</targetPath>
                        <directory>${project.build.directory}</directory>
                        <include>${project.build.finalName}.jar</include>
                    </resource>
                </resources>
            </configuration>
        </plugin>
        <!-- end::plugin[] -->
  	</plugins>
  </build>
</project>